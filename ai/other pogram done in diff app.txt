1. ASSOCIATIVE LAW
associative_addition(A,B,C,Result) :- Result is A+(B+C)
associative_multiplication(A,B,C,Result) :- Result is A*(B+C)

2. DISTRIBTIVE LAW
distributive_multiplication_over_add(A,B,C,Result) :- Result is A*(B+C)
distributive_add_over_multiplication(A,B,C,Result) :- Result is A+(B*C)

3. DERIVE THE PREDICATE (Sachin is cricketer).
% Define facts
batsman(sachin)
cricketer(batsman)

% rules
cricketer(X) :- batsman(X)

4. THREE PREDICATE (male,female,parent)
%Defining Facts 
female (pam) 
female (liz) 
female (pat)  
female (ann) 

male (tom)  
male (bob)  
male (peter) 
male (jim)

parent (pam, bob) 
parent (tom, bob) 
parent (tom, liz) 
parent (bob, ann)  
parent (bob, pat)  
parent (pat, jim) 
parent (tom, peter) 

%Defining Rules
mother (X,Y) :- parent (X,Y), female (X) 
father (X,Y) :- parent (X,Y), male (X) 

sister (X,Y) :- parent (Z,X), parent (Z, Y), female (X), X \== Y 
brother (X,Y) :- parent (Z,X), parent (Z, Y), male (x), X \== Y

grandmother (X, Z) :- mother (X,Y), parent (Y, Z)  
grandfather (X, Z) :- father (X,Y), parent (Y, Z)

uncle (X, Z) :- brother (X,Y), parent (Y, Z) 
aunt (X, Z) :- sister (X,Y), parent (Y, Z)

